{"version":3,"file":"component---src-pages-taza-1-fin-js-8e549a7eec2f07cd7c7c.js","mappings":"sKAgBA,IACA,EADiB,cAdjB,SAA+BA,EAAOC,GACpC,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,QAAS,YACTC,KAAM,eACN,cAAe,OACfC,IAAKN,GACJD,GAAqB,gBAAoB,OAAQ,CAClDQ,SAAU,UACVC,EAAG,oHACHC,SAAU,gBCTRC,EAAgB,CACpB,oBACA,mBACA,qBAMF,IA6DA,EA7DwB,SAAC,GAA+C,IAJlDC,EAAKC,EAIAC,EAA4C,EAA5CA,iBAAkBC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACrD,GAA0BC,EAAAA,EAAAA,WAAS,GAA5BC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAA5BG,EAAP,KAAcC,EAAd,KAeA,OACE,wBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,MACJZ,EAAiBM,IACnBD,GAAS,GACTH,EAAUO,IAEVJ,GAAS,KAKT,yBAAOQ,QAAQ,OAAOC,UAAU,kBAC7Bb,GAEH,uBAAKa,UAAU,6CACb,yBACEC,KAAK,OACLC,KAAK,OACLC,GAAG,OACHH,UAAU,0KACVI,YAAY,YAEZC,MAAOb,EACPc,SA5BkB,SAACX,GACzBJ,GAAS,GACTE,EAASE,EAAEY,OAAOF,QA2BZ,eAAa,SAEdf,GACC,uBAAKU,UAAU,yEACb,gBAAC,EAAD,CACEA,UAAU,uBACV,cAAY,WAMpB,qBACEA,YAAeV,GAAS,aAAf,kCACTa,GAAG,eAEFpB,GApDaC,EAoDc,EApDTC,EAoDYF,EAAcyB,OAnD5CC,KAAKC,MAAMD,KAAKE,UAAY1B,EAAMD,IAAQA,KAsD7C,0BACEiB,KAAK,SACLD,UAAU,sOAFZ,oB,mEC7DS,SAASY,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,uBAAKb,UAAU,mCAAmCa,K,mECD5C,SAASC,IACtB,OACE,2BAASd,UAAU,oDACjB,sBAAIA,UAAU,kEAAd,6BAGA,sBAAIA,UAAU,0CAAd,iB,sHCDS,SAASe,IACtB,OAA0B1B,EAAAA,EAAAA,WAAS,GACnC,GADA,WACgCA,EAAAA,EAAAA,UAAS,KAAzC,UAoBA,OACE,gBAAC,IAAD,KACE,2BAASW,UAAU,qEACjB,sBAAIA,UAAU,yEAAd,aAGA,uBACEA,UAAU,oBACVgB,IAAI,gBACJC,MAAM,WACNC,IAAI,aAGN,uBAAKlB,UAAU,iCACb,uBAAKA,UAAU,oGACb,sBAAIA,UAAU,oEACZ,wBAAMA,UAAU,SAAhB,uCACA,wBAAMA,UAAU,yBAAhB,aAEF,uBAAKA,UAAU,sCACb,uBAAKA,UAAU,iCACb,gBAAC,KAAD,CACEmB,GAAG,gBACHnB,UAAU,6JAFZ","sources":["webpack://gatsby-blog-demo/./node_modules/@heroicons/react/solid/esm/ExclamationCircleIcon.js","webpack://gatsby-blog-demo/./src/components/OneQuestionForm.js","webpack://gatsby-blog-demo/./src/components/container.js","webpack://gatsby-blog-demo/./src/components/intro.js","webpack://gatsby-blog-demo/./src/pages/taza1/fin.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction ExclamationCircleIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","import React, { useState } from \"react\";\nimport { ExclamationCircleIcon } from \"@heroicons/react/solid\";\n\nconst errorMessages = [\n  \"No es tan difícil\",\n  \"Vamos, tu puedes\",\n  \"Continúa buscando\",\n];\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst OneQuestionForm = ({ validateResponse, question, onSuccess }) => {\n  const [error, setError] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const handleChangeInput = (e) => {\n    setError(false);\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log();\n    if (validateResponse(input)) {\n      setError(false);\n      onSuccess(e);\n    } else {\n      setError(true);\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"text\" className=\"block text-lg \">\n        {question}\n      </label>\n      <div className=\"mt-4 relative rounded-md shadow-sm border\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          id=\"text\"\n          className=\"block w-full my-1 pr-10 pl-2 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md leading-8\"\n          placeholder=\"respuesta\"\n          // defaultValue=\"adamwathan\"\n          value={input}\n          onChange={handleChangeInput}\n          aria-invalid=\"true\"\n        />\n        {error && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <ExclamationCircleIcon\n              className=\"h-5 w-5 text-red-500\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        )}\n      </div>\n\n      <p\n        className={`${!error && \"invisible\"} mt-1 text-sm text-red-600 py-2`}\n        id=\"email-error\"\n      >\n        {errorMessages[getRandomInt(0, errorMessages.length)]}\n      </p>\n\n      <button\n        type=\"submit\"\n        className=\" mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Probar suerte\n      </button>\n    </form>\n  );\n};\n\nexport default OneQuestionForm;\n","import React from \"react\";\n\nexport default function Container({ children }) {\n  return <div className=\"container mx-auto px-5 max-w-sm\">{children}</div>;\n}\n","import React from \"react\";\n\nexport default function Intro() {\n  return (\n    <section className=\"flex-col flex items-center  mt-16 mb-16 md:mb-12\">\n      <h1 className=\"text-6xl font-bold tracking-tighter leading-tight  text-center\">\n        Patricia y Diego se casan\n      </h1>\n      <h4 className=\"text-center md:text-left text-lg mt-5 \">21/05/2022</h4>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport Container from \"../../components/container\";\nimport Intro from \"../../components/intro\";\nimport { graphql, Link, navigate } from \"gatsby\";\nimport { ExclamationCircleIcon } from \"@heroicons/react/solid\";\nimport OneQuestionForm from \"../../components/OneQuestionForm\";\n\nexport default function Taza1Fin() {\n  const [error, setError] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  const handleChangePassword = (e) => {\n    setError(false);\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (\n      password.toUpperCase().includes(\"LUA\") ||\n      password.toUpperCase().includes(\"LÚA\")\n    ) {\n      setError(false);\n      navigate(\"/\");\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Container>\n      <section className=\"flex-col flex items-center md:justify-between mt-8 mb-16 md:mb-12\">\n        <h1 className=\"text-6xl font-bold tracking-tighter leading-tight md:pr-8 text-center\">\n          Código 1.\n        </h1>\n        <img\n          className=\"mt-5 rounded-2xl \"\n          src=\"/bombilla.jpg\"\n          title=\"Borracho\"\n          alt=\"Borracho\"\n        />\n\n        <div className=\"bg-indigo-50 mt-4 rounded-2xl\">\n          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-24 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 md:text-4xl\">\n              <span className=\"block\">Guardad este código, os hará falta:</span>\n              <span className=\"block text-indigo-600\">CAMINITO</span>\n            </h2>\n            <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\n              <div className=\"inline-flex rounded-md shadow\">\n                <Link\n                  to=\"/prueba-final\"\n                  className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\n                >\n                  Ir a la prueba final\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Container>\n  );\n}\n"],"names":["props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","errorMessages","min","max","validateResponse","question","onSuccess","useState","error","setError","input","setInput","onSubmit","e","preventDefault","console","log","htmlFor","className","type","name","id","placeholder","value","onChange","target","length","Math","floor","random","Container","children","Intro","Taza1Fin","src","title","alt","to"],"sourceRoot":""}