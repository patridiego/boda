{"version":3,"file":"component---src-pages-condiciones-js-52236a348e01109d0629.js","mappings":"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","sources":["webpack://gatsby-blog-demo/./node_modules/@heroicons/react/solid/esm/ExclamationCircleIcon.js","webpack://gatsby-blog-demo/./src/components/OneQuestionForm.js","webpack://gatsby-blog-demo/./src/components/container.js","webpack://gatsby-blog-demo/./src/components/intro.js","webpack://gatsby-blog-demo/./src/pages/condiciones.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction ExclamationCircleIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","import React, { useState } from \"react\";\nimport { ExclamationCircleIcon } from \"@heroicons/react/solid\";\n\nconst errorMessages = [\n  \"No es tan difícil\",\n  \"Vamos, tu puedes\",\n  \"Continúa buscando\",\n];\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst OneQuestionForm = ({ validateResponse, question, onSuccess }) => {\n  const [error, setError] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const handleChangeInput = (e) => {\n    setError(false);\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log();\n    if (validateResponse(input)) {\n      setError(false);\n      onSuccess(e);\n    } else {\n      setError(true);\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"text\" className=\"block text-lg \">\n        {question}\n      </label>\n      <div className=\"mt-4 relative rounded-md shadow-sm border\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          id=\"text\"\n          className=\"block w-full my-1 pr-10 pl-2 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md leading-8\"\n          placeholder=\"respuesta\"\n          // defaultValue=\"adamwathan\"\n          value={input}\n          onChange={handleChangeInput}\n          aria-invalid=\"true\"\n        />\n        {error && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <ExclamationCircleIcon\n              className=\"h-5 w-5 text-red-500\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        )}\n      </div>\n\n      <p\n        className={`${!error && \"invisible\"} mt-1 text-sm text-red-600 py-2`}\n        id=\"email-error\"\n      >\n        {errorMessages[getRandomInt(0, errorMessages.length)]}\n      </p>\n\n      <button\n        type=\"submit\"\n        className=\" mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Probar suerte\n      </button>\n    </form>\n  );\n};\n\nexport default OneQuestionForm;\n","import React from \"react\";\n\nexport default function Container({ children }) {\n  return <div className=\"container mx-auto px-5\">{children}</div>\n}\n","import React from \"react\";\n\nexport default function Intro() {\n  return (\n    <section className=\"flex-col md:flex-row flex items-center md:justify-between mt-16 mb-16 md:mb-12\">\n      <h1 className=\"text-6xl md:text-8xl font-bold tracking-tighter leading-tight md:pr-8\">\n        Patricia y Diego se casan\n      </h1>\n      <h4 className=\"text-center md:text-left text-lg mt-5 md:pl-8\">\n        21/05/2022 {/*<a*/}\n        {/*  href=\"https://www.gatsbyjs.com/\"*/}\n        {/*  className=\"underline hover:text-success duration-200 transition-colors\"*/}\n        {/*>*/}\n        {/*  Gatsby*/}\n        {/*</a>{\" \"}*/}\n        {/*and{\" \"}*/}\n        {/*<a*/}\n        {/*  href=\"https://www.datocms.com/\"*/}\n        {/*  className=\"underline hover:text-success duration-200 transition-colors\"*/}\n        {/*>*/}\n        {/*  DatoCMS*/}\n        {/*</a>*/}\n        {/*.*/}\n      </h4>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport Container from \"../components/container\";\nimport Intro from \"../components/intro\";\nimport { graphql, navigate } from \"gatsby\";\nimport { ExclamationCircleIcon } from \"@heroicons/react/solid\";\nimport OneQuestionForm from \"../components/OneQuestionForm\";\n\nexport default function Condiciones() {\n  const [error, setError] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [intentos, setIntentos] = useState(0);\n  const mensajes = [\"¿Seguro?\", \"¿De verdad?\", \"¿Comodín del público?\"];\n\n  const condiciones = [\n    {\n      id: 0,\n      checked: false,\n      title: \"Estaremos unidos hasta que la hipoteca nos separe\",\n      description: \"Porque lo que el banco ha unido nada lo puede separar\",\n    },\n    {\n      id: 1,\n      checked: false,\n      title: \"Lúa es propiedad compartida\",\n      description: \"Aunque tiene que residir en Lugo\",\n    },\n    {\n      id: 2,\n      checked: false,\n      title: \"Otra condición\",\n      description: \"descripción\",\n    },\n  ];\n\n  const [checkedConditions, setCheckedConditions] = useState(condiciones);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\n    //   \"TODAS MARCADAS\",\n    //   checkedConditions.every((c) => c.checked === true)\n    // );\n    // console.log(\"intentos\", intentos);\n    if (intentos >= 3 && checkedConditions.every((c) => c.checked === true)) {\n      navigate(\"/regalo\");\n    } else {\n      setIntentos(intentos + 1);\n      const newConditions = checkedConditions.map((condition) => {\n        const newCondition = { ...condition };\n        newCondition.checked = false;\n        return newCondition;\n      });\n      setCheckedConditions(newConditions);\n    }\n  };\n\n  const onChangeCheckbox = (i) => () => {\n    const newConditions = [...checkedConditions];\n    newConditions[i].checked = !newConditions[i].checked;\n\n    setCheckedConditions(newConditions);\n  };\n\n  console.log(\"checkedConditions\", checkedConditions);\n  return (\n    <Container>\n      <section className=\"flex-col md:flex-row flex items-center md:justify-between mt-8 mb-16 md:mb-12\">\n        <h1 className=\"text-6xl md:text-8xl font-bold tracking-tighter leading-tight md:pr-8 text-center\">\n          El contrato.\n        </h1>\n        <img\n          className=\"mt-5 rounded-2xl \"\n          src=\"/contrato.jpg\"\n          title=\"Borracho\"\n          alt=\"Borracho\"\n        />\n        <form onSubmit={handleSubmit}>\n          <fieldset className=\"space-y-5\">\n            <legend className=\"sr-only\">Notifications</legend>\n\n            {condiciones.map((c, i) => {\n              return (\n                <div className=\"relative flex items-start\" key={c.id}>\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id={c.title}\n                      aria-describedby=\"candidates-description\"\n                      name=\"candidates\"\n                      type=\"checkbox\"\n                      className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                      checked={checkedConditions[i].checked}\n                      onChange={onChangeCheckbox(i)}\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label\n                      htmlFor={c.title}\n                      className=\"font-medium text-gray-700\"\n                    >\n                      {c.title}\n                    </label>\n                    <p id=\"candidates-description\" className=\"text-gray-500\">\n                      {c.description}\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n          </fieldset>\n          <p\n            className={`${\n              intentos === 0 && \"invisible\"\n            } mt-1 text-sm text-red-600 py-2`}\n            id=\"email-error\"\n          >\n            {mensajes[(intentos - 1) % mensajes.length]}\n          </p>\n\n          <button\n            type=\"submit\"\n            className=\" mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Acepto las condiciones\n          </button>\n        </form>\n      </section>\n    </Container>\n  );\n}\n"],"names":["props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","errorMessages","min","max","validateResponse","question","onSuccess","useState","error","setError","input","setInput","onSubmit","e","preventDefault","console","log","htmlFor","className","type","name","id","placeholder","value","onChange","target","length","Math","floor","random","Container","children","Intro","Condiciones","intentos","setIntentos","mensajes","condiciones","checked","title","description","checkedConditions","setCheckedConditions","onChangeCheckbox","i","newConditions","src","alt","every","c","navigate","map","condition","newCondition","key"],"sourceRoot":""}